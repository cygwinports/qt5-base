--- origsrc/qtbase-opensource-src-5.5.1/src/platformsupport/services/genericunix/qgenericunixservices.cpp	2015-10-12 23:35:27.000000000 -0500
+++ src/qtbase-opensource-src-5.5.1/src/platformsupport/services/genericunix/qgenericunixservices.cpp	2015-10-18 17:23:13.272412500 -0500
@@ -48,13 +48,16 @@ static inline QByteArray detectDesktopEn
 {
     const QByteArray xdgCurrentDesktop = qgetenv("XDG_CURRENT_DESKTOP");
     if (!xdgCurrentDesktop.isEmpty())
-        return xdgCurrentDesktop.toUpper(); // KDE, GNOME, UNITY, LXDE, MATE, XFCE...
+        return xdgCurrentDesktop.contains("GNOME") ? "GNOME" // GNOME, GNOME Classic, GNOME Flashback
+                                                   : xdgCurrentDesktop.toUpper(); // KDE, UNITY, LXDE, MATE, XFCE...
 
     // Classic fallbacks
     if (!qEnvironmentVariableIsEmpty("KDE_FULL_SESSION"))
         return QByteArrayLiteral("KDE");
     if (!qEnvironmentVariableIsEmpty("GNOME_DESKTOP_SESSION_ID"))
         return QByteArrayLiteral("GNOME");
+    if (!qEnvironmentVariableIsEmpty("MATE_DESKTOP_SESSION_ID"))
+        return QByteArrayLiteral("MATE");
 
     // Fallback to checking $DESKTOP_SESSION (unreliable)
     const QByteArray desktopSession = qgetenv("DESKTOP_SESSION");
@@ -96,8 +99,13 @@ static inline bool detectWebBrowser(cons
             browser->append(QStringLiteral(" exec"));
             return true;
         }
-    } else if (desktop == QByteArray("GNOME")) {
-        if (checkExecutable(QStringLiteral("gnome-open"), browser))
+    } else if (desktop == QByteArray("GNOME") ||
+               desktop == QByteArray("LXDE") ||
+               desktop == QByteArray("LXQT") ||
+               desktop == QByteArray("MATE") ||
+               desktop == QByteArray("X-CINNAMON") ||
+               desktop == QByteArray("XFCE")) {
+        if (checkExecutable(QStringLiteral("gvfs-open"), browser))
             return true;
     }
 
--- origsrc/qtbase-opensource-src-5.5.1/src/platformsupport/themes/genericunix/qgenericunixthemes.cpp	2015-10-12 23:35:27.000000000 -0500
+++ src/qtbase-opensource-src-5.5.1/src/platformsupport/themes/genericunix/qgenericunixthemes.cpp	2015-10-18 17:23:13.276412700 -0500
@@ -177,6 +177,8 @@ QPlatformSystemTrayIcon *QGenericUnixThe
 QVariant QGenericUnixTheme::themeHint(ThemeHint hint) const
 {
     switch (hint) {
+    case QPlatformTheme::SystemIconThemeName:
+        return QVariant(QString(QStringLiteral("oxygen")));
     case QPlatformTheme::SystemIconFallbackThemeName:
         return QVariant(QString(QStringLiteral("hicolor")));
     case QPlatformTheme::IconThemeSearchPaths:
@@ -694,6 +696,7 @@ QStringList QGenericUnixTheme::themeName
         QList<QByteArray> gtkBasedEnvironments;
         gtkBasedEnvironments << "GNOME"
                              << "X-CINNAMON"
+                             << "X-CYGWIN"
                              << "UNITY"
                              << "MATE"
                              << "XFCE"
@@ -705,6 +708,8 @@ QStringList QGenericUnixTheme::themeName
                 result.push_back(QLatin1String(QKdeTheme::name));
 #endif
             } else if (gtkBasedEnvironments.contains(desktopName)) {
+                if (desktopEnvironment == "GNOME")
+                    result.push_back(QStringLiteral("qgnomeplatform"));
                 // prefer the GTK2 theme implementation with native dialogs etc.
                 result.push_back(QStringLiteral("gtk2"));
                 // fallback to the generic Gnome theme if loading the GTK2 theme fails
